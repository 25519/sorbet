No errors! Great job.

--- output/Foo.rb
# frozen_string_literal: true
# DO NOT TOUCH
# This file is generated by ./scripts/bin/autogen
# Use that.
# typed: true

require 'in_class'
require 'in_method'
require 'my_gem'
Opus::Require.on_autoload('Foo')

module Foo
end

Opus::Require.for_autoload(Foo, "test/cli/autogen-autoloader/foo.rb")

--- output/Yabba.rb
# frozen_string_literal: true
# DO NOT TOUCH
# This file is generated by ./scripts/bin/autogen
# Use that.
# typed: true

Opus::Require.on_autoload('Yabba')

module Yabba
end

Opus::Require.autoload_map(Yabba, {
  Dabba: "autoloader/Yabba/Dabba.rb",
})

Opus::Require.for_autoload(Yabba, "test/cli/autogen-autoloader/bar.rb")

--- output/Yabba/Dabba.rb
# frozen_string_literal: true
# DO NOT TOUCH
# This file is generated by ./scripts/bin/autogen
# Use that.
# typed: true

Opus::Require.on_autoload('Yabba::Dabba')

module Yabba::Dabba
end

Opus::Require.autoload_map(Yabba::Dabba, {
  Bar2: "autoloader/Yabba/Dabba/Bar2.rb",
})

Opus::Require.for_autoload(Yabba::Dabba, "test/cli/autogen-autoloader/bar.rb")

--- output/Yabba/Dabba/Bar2.rb
# frozen_string_literal: true
# DO NOT TOUCH
# This file is generated by ./scripts/bin/autogen
# Use that.
# typed: true

Opus::Require.on_autoload('Yabba::Dabba::Bar2')

class Yabba::Dabba::Bar2
end

Opus::Require.for_autoload(Yabba::Dabba::Bar2, "test/cli/autogen-autoloader/bar2.rb")
